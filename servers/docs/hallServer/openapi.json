{
  "openapi": "3.0.0",
  "info": {
    "title": "TSRPC Open API",
    "version": "1.0.0"
  },
  "paths": {
    "/Authorize": {
      "post": {
        "operationId": "Authorize",
        "requestBody": {
          "description": "Req<Authorize>",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PtlAuthorize_ReqAuthorize"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "ApiReturn<ResAuthorize>",
                  "properties": {
                    "isSucc": {
                      "type": "boolean",
                      "enum": [
                        true
                      ],
                      "default": true
                    },
                    "res": {
                      "$ref": "#/components/schemas/PtlAuthorize_ResAuthorize"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/CancelMatch": {
      "post": {
        "operationId": "CancelMatch",
        "requestBody": {
          "description": "Req<CancelMatch>",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PtlCancelMatch_ReqCancelMatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "ApiReturn<ResCancelMatch>",
                  "properties": {
                    "isSucc": {
                      "type": "boolean",
                      "enum": [
                        true
                      ],
                      "default": true
                    },
                    "res": {
                      "$ref": "#/components/schemas/PtlCancelMatch_ResCancelMatch"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/CreateRoom": {
      "post": {
        "operationId": "CreateRoom",
        "requestBody": {
          "description": "Req<CreateRoom>",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PtlCreateRoom_ReqCreateRoom"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "ApiReturn<ResCreateRoom>",
                  "properties": {
                    "isSucc": {
                      "type": "boolean",
                      "enum": [
                        true
                      ],
                      "default": true
                    },
                    "res": {
                      "$ref": "#/components/schemas/PtlCreateRoom_ResCreateRoom"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/GetRoomRegInfo": {
      "post": {
        "operationId": "GetRoomRegInfo",
        "requestBody": {
          "description": "Req<GetRoomRegInfo>",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PtlGetRoomRegInfo_ReqGetRoomRegInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "ApiReturn<ResGetRoomRegInfo>",
                  "properties": {
                    "isSucc": {
                      "type": "boolean",
                      "enum": [
                        true
                      ],
                      "default": true
                    },
                    "res": {
                      "$ref": "#/components/schemas/PtlGetRoomRegInfo_ResGetRoomRegInfo"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/QueryMatch": {
      "post": {
        "operationId": "QueryMatch",
        "requestBody": {
          "description": "Req<QueryMatch>",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PtlQueryMatch_ReqQueryMatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "ApiReturn<ResQueryMatch>",
                  "properties": {
                    "isSucc": {
                      "type": "boolean",
                      "enum": [
                        true
                      ],
                      "default": true
                    },
                    "res": {
                      "$ref": "#/components/schemas/PtlQueryMatch_ResQueryMatch"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/RecoverPlayerRoom": {
      "post": {
        "operationId": "RecoverPlayerRoom",
        "requestBody": {
          "description": "Req<RecoverPlayerRoom>",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PtlRecoverPlayerRoom_ReqRecoverPlayerRoom"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "ApiReturn<ResRecoverPlayerRoom>",
                  "properties": {
                    "isSucc": {
                      "type": "boolean",
                      "enum": [
                        true
                      ],
                      "default": true
                    },
                    "res": {
                      "$ref": "#/components/schemas/PtlRecoverPlayerRoom_ResRecoverPlayerRoom"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/RequestMatch": {
      "post": {
        "operationId": "RequestMatch",
        "requestBody": {
          "description": "Req<RequestMatch>",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PtlRequestMatch_ReqRequestMatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "ApiReturn<ResRequestMatch>",
                  "properties": {
                    "isSucc": {
                      "type": "boolean",
                      "enum": [
                        true
                      ],
                      "default": true
                    },
                    "res": {
                      "$ref": "#/components/schemas/PtlRequestMatch_ResRequestMatch"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "$ref": "#/components/responses/error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PtlAuthorize_ReqAuthorize": {
        "allOf": [
          {
            "$ref": "#/components/schemas/______tsgf_apiCrypto_Models_IAppEncryptRequest"
          },
          {
            "type": "object",
            "properties": {}
          }
        ],
        "description": "玩家获取认证信息(由应用web服务器在服务端调用)"
      },
      "______tsgf_apiCrypto_Models_IAppEncryptRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/______tsgf_apiCrypto_Models_IBaseEncryptRequest"
          },
          {
            "type": "object",
            "properties": {
              "appId": {
                "type": "string",
                "description": "应用ID"
              }
            },
            "required": [
              "appId"
            ]
          }
        ],
        "description": "应用加密请求的基类"
      },
      "______tsgf_apiCrypto_Models_IBaseEncryptRequest": {
        "type": "object",
        "properties": {
          "ciphertext": {
            "type": "string",
            "description": "请求数据密文"
          },
          "data": {
            "type": "object",
            "description": "请求数据对象, 到了ApiCall层就是解析通过可以使用的"
          }
        },
        "description": "加密请求的基类"
      },
      "PtlAuthorize_ResAuthorize": {
        "allOf": [
          {
            "$ref": "#/components/schemas/base_BaseResponse"
          },
          {
            "type": "object",
            "properties": {
              "playerId": {
                "type": "string",
                "description": "平台生成的玩家ID"
              },
              "playerToken": {
                "type": "string",
                "description": "所有需要认证的接口、服务器，都需要附带token"
              }
            },
            "required": [
              "playerId",
              "playerToken"
            ]
          }
        ]
      },
      "base_BaseResponse": {
        "type": "object",
        "properties": {},
        "description": "响应基类"
      },
      "PtlCancelMatch_ReqCancelMatch": {
        "allOf": [
          {
            "$ref": "#/components/schemas/base_BaseRequest"
          },
          {
            "type": "object",
            "properties": {
              "matchReqId": {
                "type": "string",
                "description": "非房间发起的匹配，发起匹配请求中的所有玩家都可以取消"
              }
            },
            "required": [
              "matchReqId"
            ]
          }
        ],
        "description": "取消匹配"
      },
      "base_BaseRequest": {
        "type": "object",
        "properties": {
          "playerToken": {
            "type": "string",
            "description": "有需要鉴权的接口,则需要传递玩家token"
          }
        },
        "description": "请求基类"
      },
      "PtlCancelMatch_ResCancelMatch": {
        "allOf": [
          {
            "$ref": "#/components/schemas/base_BaseResponse"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "PtlCreateRoom_ReqCreateRoom": {
        "allOf": [
          {
            "$ref": "#/components/schemas/base_BaseRequest"
          },
          {
            "$ref": "#/components/schemas/______tsgf_room_IRoomInfo_ICreateRoomPara"
          },
          {
            "type": "object",
            "properties": {}
          }
        ],
        "description": "创建房间"
      },
      "______tsgf_room_IRoomInfo_ICreateRoomPara": {
        "allOf": [
          {
            "$ref": "#/components/schemas/______tsgf_room_IRoomInfo_ITeamParams"
          },
          {
            "type": "object",
            "properties": {
              "roomName": {
                "type": "string",
                "description": "房间名字，查询房间和加入房间时会获取到"
              },
              "ownerPlayerId": {
                "type": "string",
                "description": "房主玩家ID，创建后，只有房主玩家的客户端才可以调用相关的管理操作, 如果不想任何人操作,可以直接设置为'', 所有人都离开房间后自动解散"
              },
              "maxPlayers": {
                "type": "number",
                "description": "进入房间的最大玩家数量"
              },
              "isPrivate": {
                "type": "boolean",
                "description": "是否私有房间，即不参与匹配, 但可以通过房间ID加入"
              },
              "matcherKey": {
                "type": "string",
                "description": "如果参与匹配,则使用的匹配器标识"
              },
              "customProperties": {
                "type": "string",
                "description": "自定义房间属性字符串"
              },
              "roomType": {
                "type": "string",
                "description": "房间类型自定义字符串"
              }
            },
            "required": [
              "roomName",
              "ownerPlayerId",
              "maxPlayers",
              "isPrivate"
            ]
          }
        ],
        "description": "创建房间的参数"
      },
      "______tsgf_room_IRoomInfo_ITeamParams": {
        "type": "object",
        "properties": {
          "fixedTeamCount": {
            "type": "number",
            "description": "[固定数量的队伍] 直接用数量自动生成所有固定队伍配置, 房间ID将从 '1' 开始到 fixedTeamCount,\n还需要传 fixedTeamMinPlayers 和 fixedTeamMaxPlayers, 或者使用 fixedTeamInfoList 完全自定义"
          },
          "fixedTeamMinPlayers": {
            "type": "number",
            "description": "[固定数量的队伍] 每支队伍最少玩家数(包含), 没传默认为1"
          },
          "fixedTeamMaxPlayers": {
            "type": "number",
            "description": "[固定数量的队伍] 每支队伍最大玩家数(包含), 没传默认为9"
          },
          "fixedTeamInfoList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/______tsgf_room_IRoomInfo_ITeamInfo"
            },
            "description": "[固定数量的队伍] 使用传入的队伍id等信息来定义所有队伍, 并忽略 fixedTeam* 的其他参数"
          },
          "freeTeamMinPlayers": {
            "type": "number",
            "description": "[自由数量的队伍] 指定每支队伍的最少玩家数, 同时还需要指定 freeTeamMaxPlayers"
          },
          "freeTeamMaxPlayers": {
            "type": "number",
            "description": "[自由数量的队伍] 指定每支队伍的最大玩家数, 同时还需要指定 freeTeamMinPlayers"
          }
        },
        "description": "队伍的配置参数"
      },
      "______tsgf_room_IRoomInfo_ITeamInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "队伍 ID, 房间内唯一"
          },
          "name": {
            "type": "string",
            "description": "队伍名称"
          },
          "minPlayers": {
            "type": "number",
            "description": "队伍最小人数"
          },
          "maxPlayers": {
            "type": "number",
            "description": "队伍最大人数"
          }
        },
        "required": [
          "id",
          "name",
          "minPlayers",
          "maxPlayers"
        ]
      },
      "PtlCreateRoom_ResCreateRoom": {
        "allOf": [
          {
            "$ref": "#/components/schemas/base_BaseResponse"
          },
          {
            "$ref": "#/components/schemas/______tsgf_room_IRoomInfo_ICreateRoomRsp"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "______tsgf_room_IRoomInfo_ICreateRoomRsp": {
        "type": "object",
        "properties": {
          "gameServerUrl": {
            "type": "string",
            "description": "游戏服务器的连接地址"
          },
          "roomInfo": {
            "$ref": "#/components/schemas/______tsgf_room_IRoomInfo_IRoomInfo",
            "description": "房间信息"
          }
        },
        "required": [
          "gameServerUrl",
          "roomInfo"
        ],
        "description": "创建房间的响应"
      },
      "______tsgf_room_IRoomInfo_IRoomInfo": {
        "type": "object",
        "properties": {
          "roomId": {
            "type": "string",
            "description": "房间ID"
          },
          "roomName": {
            "type": "string",
            "description": "房间名称"
          },
          "ownerPlayerId": {
            "type": "string",
            "description": "房主玩家ID，创建后，只有房主玩家的客户端才可以调用相关的管理操作"
          },
          "isPrivate": {
            "type": "boolean",
            "description": "是否私有房间，即不参与匹配, 但可以通过房间ID加入"
          },
          "isForbidJoin": {
            "type": "boolean",
            "description": "是否不允许加人(任何方式都无法加入)"
          },
          "matcherKey": {
            "type": "string",
            "description": "如果参与匹配,则使用的匹配器标识"
          },
          "createType": {
            "$ref": "#/components/schemas/______tsgf_room_IRoomInfo_ERoomCreateType",
            "description": "创建房间的方式"
          },
          "maxPlayers": {
            "type": "number",
            "description": "进入房间的最大玩家数量"
          },
          "roomType": {
            "type": "string",
            "description": "房间类型自定义字符串"
          },
          "customProperties": {
            "type": "string",
            "description": "自定义房间属性字符串"
          },
          "allPlayerMatchReqId": {
            "type": "string",
            "description": "如果当前房间在匹配 (房间全玩家匹配),则有匹配请求id"
          },
          "playerList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/______tsgf_player_IPlayerInfo_IPlayerInfo"
            },
            "description": "玩家列表"
          },
          "teamList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/______tsgf_room_IRoomInfo_ITeamInfo"
            },
            "description": "队伍列表,如果创建房间时有传入队伍参数,则会有内容,否则为[]"
          },
          "fixedTeamCount": {
            "type": "number",
            "description": "[固定数量的队伍] 直接用数量自动生成所有固定队伍配置, 房间ID将从 '1' 开始到 fixedTeamCount,\n还需要传 fixedTeamMinPlayers 和 fixedTeamMaxPlayers, 或者使用 fixedTeamInfoList 完全自定义"
          },
          "freeTeamMinPlayers": {
            "type": "number",
            "description": "[自由数量的队伍] 指定每支队伍的最少玩家数, 同时还需要指定 freeTeamMaxPlayers"
          },
          "freeTeamMaxPlayers": {
            "type": "number",
            "description": "[自由数量的队伍] 指定每支队伍的最大玩家数, 同时还需要指定 freeTeamMinPlayers"
          },
          "frameRate": {
            "type": "number",
            "description": "同步帧率"
          },
          "frameSyncState": {
            "$ref": "#/components/schemas/______tsgf_room_IRoomInfo_EFrameSyncState",
            "description": "帧同步状态"
          },
          "createTime": {
            "type": "number",
            "description": "创建房间时间戳（单位毫秒， new Date(createTime) 可获得时间对象）"
          },
          "startGameTime": {
            "type": "number",
            "description": "开始游戏时间戳（单位毫秒， new Date(createTime) 可获得时间对象）,0表示未开始"
          }
        },
        "required": [
          "roomId",
          "roomName",
          "ownerPlayerId",
          "isPrivate",
          "isForbidJoin",
          "createType",
          "maxPlayers",
          "playerList",
          "teamList",
          "frameRate",
          "frameSyncState",
          "createTime",
          "startGameTime"
        ],
        "description": "房间信息"
      },
      "______tsgf_room_IRoomInfo_ERoomCreateType": {
        "type": "number",
        "enum": [
          0,
          1
        ],
        "description": "创建房间的方式"
      },
      "______tsgf_player_IPlayerInfo_IPlayerInfo": {
        "type": "object",
        "properties": {
          "playerId": {
            "type": "string",
            "description": "玩家ID"
          },
          "showName": {
            "type": "string",
            "description": "显示名"
          },
          "teamId": {
            "type": "string",
            "description": "当前房间中所在的队伍id"
          },
          "customPlayerStatus": {
            "type": "number",
            "description": "自定义玩家状态"
          },
          "customPlayerProfile": {
            "type": "string",
            "description": "自定义玩家信息"
          },
          "networkState": {
            "$ref": "#/components/schemas/______tsgf_player_IPlayerInfo_ENetworkState",
            "description": "网络状态"
          },
          "isRobot": {
            "type": "boolean",
            "description": "是否机器人"
          },
          "roomRobotIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "当前所在房间控制的机器人id列表(机器人玩家id)"
          }
        },
        "required": [
          "playerId",
          "showName",
          "customPlayerStatus",
          "customPlayerProfile",
          "networkState",
          "isRobot"
        ],
        "description": "玩家信息"
      },
      "______tsgf_player_IPlayerInfo_ENetworkState": {
        "type": "number",
        "enum": [
          0,
          1
        ],
        "description": "网络状态"
      },
      "______tsgf_room_IRoomInfo_EFrameSyncState": {
        "type": "number",
        "enum": [
          0,
          1
        ],
        "description": "帧同步状态"
      },
      "PtlGetRoomRegInfo_ReqGetRoomRegInfo": {
        "allOf": [
          {
            "$ref": "#/components/schemas/base_BaseRequest"
          },
          {
            "type": "object",
            "properties": {
              "roomId": {
                "type": "string"
              }
            },
            "required": [
              "roomId"
            ]
          }
        ],
        "description": "获取房间注册信息"
      },
      "PtlGetRoomRegInfo_ResGetRoomRegInfo": {
        "allOf": [
          {
            "$ref": "#/components/schemas/base_BaseResponse"
          },
          {
            "type": "object",
            "properties": {
              "regInfo": {
                "$ref": "#/components/schemas/______tsgf_room_IRoomInfo_IRoomRegInfo"
              }
            },
            "required": [
              "regInfo"
            ]
          }
        ]
      },
      "______tsgf_room_IRoomInfo_IRoomRegInfo": {
        "type": "object",
        "properties": {
          "gameServerUrl": {
            "type": "string",
            "description": "游戏服务器的连接地址"
          }
        },
        "required": [
          "gameServerUrl"
        ],
        "description": "房间在服务器上的注册信息"
      },
      "PtlQueryMatch_ReqQueryMatch": {
        "allOf": [
          {
            "$ref": "#/components/schemas/base_BaseRequest"
          },
          {
            "type": "object",
            "properties": {
              "matchReqId": {
                "type": "string",
                "description": "匹配请求ID，用于查询匹配结果，建议2秒调用查询一次，直到超时(因为请求时超时时间已知，客户端要加个超时判断)"
              }
            },
            "required": [
              "matchReqId"
            ]
          }
        ],
        "description": "查询匹配"
      },
      "PtlQueryMatch_ResQueryMatch": {
        "allOf": [
          {
            "$ref": "#/components/schemas/base_BaseResponse"
          },
          {
            "type": "object",
            "properties": {
              "hasResult": {
                "type": "boolean",
                "description": "当前匹配是否有结果"
              },
              "errMsg": {
                "type": "string",
                "description": "如果匹配结果是失败的则有错误消息"
              },
              "errCode": {
                "type": "number",
                "description": "如果匹配结果是失败的则有错误码"
              },
              "matchResult": {
                "$ref": "#/components/schemas/______tsgf_match_Models_IMatchResult",
                "description": "匹配结果, 如果匹配有结果并且是成功的，则不为空"
              }
            },
            "required": [
              "hasResult"
            ]
          }
        ]
      },
      "______tsgf_match_Models_IMatchResult": {
        "type": "object",
        "properties": {
          "gameServerUrl": {
            "type": "string",
            "description": "房间所处的游戏服务器地址"
          },
          "roomId": {
            "type": "string",
            "description": "房间id"
          },
          "matchPlayerResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/______tsgf_match_Models_IMatchPlayerResult"
            },
            "description": "本次匹配中各个玩家对应的结果信息"
          }
        },
        "required": [
          "gameServerUrl",
          "roomId",
          "matchPlayerResults"
        ],
        "description": "匹配请求的匹配结果"
      },
      "______tsgf_match_Models_IMatchPlayerResult": {
        "type": "object",
        "properties": {
          "playerId": {
            "type": "string",
            "description": "玩家id"
          },
          "teamId": {
            "type": "string",
            "description": "应该加入的队伍id"
          }
        },
        "required": [
          "playerId"
        ],
        "description": "匹配请求的单个玩家结果"
      },
      "PtlRecoverPlayerRoom_ReqRecoverPlayerRoom": {
        "allOf": [
          {
            "$ref": "#/components/schemas/base_BaseRequest"
          },
          {
            "type": "object",
            "properties": {
              "playerId": {
                "type": "string"
              },
              "playerToken": {
                "type": "string"
              },
              "updateShowName": {
                "type": "string",
                "description": "可更新玩家显示名"
              }
            },
            "required": [
              "playerId",
              "playerToken"
            ]
          }
        ]
      },
      "PtlRecoverPlayerRoom_ResRecoverPlayerRoom": {
        "allOf": [
          {
            "$ref": "#/components/schemas/base_BaseResponse"
          },
          {
            "type": "object",
            "properties": {
              "playerId": {
                "type": "string",
                "description": "全局唯一的玩家ID"
              },
              "playerToken": {
                "type": "string",
                "description": "玩家认证令牌"
              },
              "currRoomId": {
                "type": "string",
                "description": "当前所在的房间ID"
              }
            },
            "required": [
              "playerId",
              "playerToken"
            ]
          }
        ]
      },
      "PtlRequestMatch_ReqRequestMatch": {
        "allOf": [
          {
            "$ref": "#/components/schemas/base_BaseRequest"
          },
          {
            "type": "object",
            "properties": {
              "matchParams": {
                "$ref": "#/components/schemas/______tsgf_match_Models_IMatchParamsFromPlayer",
                "description": "匹配参数"
              }
            },
            "required": [
              "matchParams"
            ]
          }
        ],
        "description": "请求匹配"
      },
      "______tsgf_match_Models_IMatchParamsFromPlayer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/______tsgf_match_Models_IMatchParamsBase"
          },
          {
            "type": "object",
            "properties": {
              "matchFromType": {
                "type": "string",
                "enum": [
                  "Player"
                ]
              },
              "matchFromInfo": {
                "$ref": "#/components/schemas/______tsgf_match_Models_IMatchFromPlayer",
                "description": "匹配发起的玩家信息, 注意,这些玩家不会收到服务器通知"
              }
            },
            "required": [
              "matchFromType",
              "matchFromInfo"
            ]
          }
        ],
        "description": "单独玩家发起的匹配参数"
      },
      "______tsgf_match_Models_IMatchParamsBase": {
        "type": "object",
        "properties": {
          "matchType": {
            "type": "string",
            "description": "匹配自定义类型, 只有相同的才会匹配在一起!"
          },
          "matcherKey": {
            "type": "string",
            "description": "匹配器标识(只有相同的才会匹配在一起)，内置的匹配器标识定义: MatcherKeys，也可以使用自定义的(服务器)匹配器"
          },
          "matcherParams": {
            "type": "object",
            "description": "匹配器参数，对应匹配器需要的额外配置"
          },
          "matchTimeoutSec": {
            "type": "number",
            "description": "匹配超时秒数, 0或者undefined则默认60秒"
          },
          "maxPlayers": {
            "type": "number",
            "description": "房间最大玩家数, 只有相同的才会匹配在一起, 如果有队伍, 则队伍的合计最大玩家数要和本值一致!"
          },
          "teamParams": {
            "$ref": "#/components/schemas/______tsgf_room_IRoomInfo_ITeamParams",
            "description": "组队参数, 只有相同的才会匹配在一起, 是否需要取决于匹配器是否需要"
          }
        },
        "required": [
          "matcherKey",
          "matcherParams",
          "maxPlayers"
        ],
        "description": "匹配请求参数基础定义\r\n匹配器+最大玩家数+组队参数 全部一致才会匹配到一起"
      },
      "______tsgf_match_Models_EMatchFromType": {
        "type": "string",
        "enum": [
          "Player",
          "RoomJoinUs",
          "RoomAllPlayers"
        ],
        "description": "匹配类型"
      },
      "______tsgf_match_Models_IMatchFromPlayer": {
        "type": "object",
        "properties": {
          "playerIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "要匹配的玩家ID, 一般只传自己,\n可以传入其他玩家id, 但其他玩家并不会收到通知,因此其他玩家的后续操作需要自行处理(连接游戏服务器和加入房间等)"
          }
        },
        "required": [
          "playerIds"
        ],
        "description": "来自单个玩家提交的匹配信息"
      },
      "PtlRequestMatch_ResRequestMatch": {
        "allOf": [
          {
            "$ref": "#/components/schemas/base_BaseResponse"
          },
          {
            "type": "object",
            "properties": {
              "matchReqId": {
                "type": "string",
                "description": "匹配请求ID，用于查询匹配结果，建议2秒调用查询一次，直到超时"
              }
            },
            "required": [
              "matchReqId"
            ]
          }
        ]
      },
      "?bson_ObjectID": {
        "type": "string"
      },
      "?bson_ObjectId": {
        "type": "string"
      },
      "?mongodb_ObjectID": {
        "type": "string"
      },
      "?mongodb_ObjectId": {
        "type": "string"
      }
    },
    "responses": {
      "error": {
        "description": "Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "title": "API 错误",
              "description": "业务错误（ApiError）返回 HTTP 状态码 200，其它错误返回 HTTP 状态码 500",
              "properties": {
                "isSucc": {
                  "type": "boolean",
                  "enum": [
                    false
                  ],
                  "default": false
                },
                "err": {
                  "type": "object",
                  "description": "TsrpcError",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "ApiError",
                        "NetworkError",
                        "ServerError",
                        "ClientError"
                      ]
                    },
                    "code": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "integer"
                        }
                      ],
                      "nullable": true
                    }
                  },
                  "required": [
                    "message",
                    "type"
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}